import cerridwen.api_server

from cerridwen import Moon, Sun, LatLong

from nose.tools import assert_equal, assert_almost_equal
import unittest

# misc
def test_age():
    assert_almost_equal(Moon(2456794.949305556).age(), 18.189345157705247)

def test_period_length():
    assert_almost_equal(Moon(2456794.949305556).period_length(), 29.517968974076211)

# new/full moons
def test_next_new_moon():
    assert_almost_equal(Moon(2456794.9541666).next_new_moon().jd, 2456806.2779293722)

def test_next_full_moon():
    assert_almost_equal(Moon(2456731.376389).next_full_moon().jd, 2456733.2141234726)

# sun/moon rise/set
# compared with data generated by
#   http://aa.usno.navy.mil/data/docs/RS_OneYear.php (Form B, long=13E, lat=52N)
def test_rise_set():
    obs = LatLong(52, 13)
    assert_equal(Moon(2456798.2, obs).next_rise().iso_date, "2014-05-20T23:37:17Z")
    assert_equal(Sun(2456799.9, obs).next_rise().iso_date, "2014-05-23T03:03:04Z")

class HTTP_TestCase(unittest.TestCase):
    def setUp(self):
        self.app = cerridwen.api_server.app.test_client()

    def simple_sun_test(self):
        response = self.app.get('/v1/sun')
        self.assertEqual(response.status_code, 200)

    def simple_moon_test(self):
        response = self.app.get('/v1/moon')
        self.assertEqual(response.status_code, 200)

    def root_404(self):
        response = self.app.get('/')
        self.assertEqual(response.status_code, 404)
